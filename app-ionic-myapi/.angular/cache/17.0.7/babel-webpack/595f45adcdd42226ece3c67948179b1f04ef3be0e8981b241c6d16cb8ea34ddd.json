{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ruano/OneDrive/Escritorio/app-my-api/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class GfncService {\n  constructor() {\n    this.httpClient = inject(HttpClient);\n  }\n  getAll() {\n    return firstValueFrom(this.httpClient.get('http://localhost:3000/api/gfnc'));\n  }\n  getById(id) {\n    return _asyncToGenerator(function* () {\n      const response = yield fetch(`http://localhost:3000/api/gfnc/${id}`);\n      return yield response.json();\n    })();\n  }\n  static #_ = this.ɵfac = function GfncService_Factory(t) {\n    return new (t || GfncService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GfncService,\n    factory: GfncService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["inject","HttpClient","firstValueFrom","GfncService","constructor","httpClient","getAll","get","getById","id","_asyncToGenerator","response","fetch","json","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ruano\\OneDrive\\Escritorio\\app-my-api\\src\\app\\services\\gfnc.service.ts"],"sourcesContent":["import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface Gfnc {\n  gfnc: GfncElement[];\n}\n\nexport interface GfncElement {\n  _id:       string;\n  Imagen:    string;\n  Nombre:    string;\n  Clase:     string;\n  Rareza:    string;\n  Stats_max: StatsM;\n  Stats_min: StatsM;\n  Skills:    Skill[];\n}\n\nexport interface Skill {\n  Nombre:      string;\n  Descripcion: string;\n  _id:         string;\n}\n\nexport interface StatsM {\n  HP:                    string;\n  ATK:                   string;\n  ATK_Speed:             string;\n  Power:                 string;\n  DEF:                   string;\n  DEF_Penetration:       string;\n  Crit_Rate:             string;\n  Crit_Damage:           string;\n  After_Battle_Recovery: string;\n  _id:                   string;\n}\n\ntype ApiResponse = { gfnc: GfncElement[] }\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GfncService {\n\n  httpClient = inject(HttpClient);\n\n  getAll(): Promise<ApiResponse> {\n    return firstValueFrom(\n      this.httpClient.get<ApiResponse>('http://localhost:3000/api/gfnc')\n    )\n\n  }\n\n  async getById(id: number): Promise<GfncElement> {\n    const response = await fetch(`http://localhost:3000/api/gfnc/${id}`);\n    return await response.json();\n  }\n}\n"],"mappings":";AAAA,SAASA,MAAM,QAAoB,eAAe;AAClD,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,cAAc,QAAQ,MAAM;;AA0CrC,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAKE,KAAAC,UAAU,GAAGL,MAAM,CAACC,UAAU,CAAC;;EAE/BK,MAAMA,CAAA;IACJ,OAAOJ,cAAc,CACnB,IAAI,CAACG,UAAU,CAACE,GAAG,CAAc,gCAAgC,CAAC,CACnE;EAEH;EAEMC,OAAOA,CAACC,EAAU;IAAA,OAAAC,iBAAA;MACtB,MAAMC,QAAQ,SAASC,KAAK,CAAC,kCAAkCH,EAAE,EAAE,CAAC;MACpE,aAAaE,QAAQ,CAACE,IAAI,EAAE;IAAC;EAC/B;EAAC,QAAAC,CAAA,G;qBAdUX,WAAW;EAAA;EAAA,QAAAY,EAAA,G;WAAXZ,WAAW;IAAAa,OAAA,EAAXb,WAAW,CAAAc,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}