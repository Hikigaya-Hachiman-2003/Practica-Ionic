{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class GfncService {\n  constructor() {\n    this.httpClient = inject(HttpClient);\n  }\n  getAll() {\n    return firstValueFrom(this.httpClient.get('http://localhost:3000/api/gfnc'));\n  }\n  static #_ = this.ɵfac = function GfncService_Factory(t) {\n    return new (t || GfncService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GfncService,\n    factory: GfncService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["inject","HttpClient","firstValueFrom","GfncService","constructor","httpClient","getAll","get","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ruano\\OneDrive\\Escritorio\\app-my-api\\src\\app\\services\\gfnc.service.ts"],"sourcesContent":["import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Gfnc } from '../interfaces/gfnc'\nimport { firstValueFrom } from 'rxjs';\n\n\ntype ApiResponse = { results: Gfnc[] }\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GfncService {\n\n  httpClient = inject(HttpClient);\n\n  getAll(): Promise<ApiResponse> {\n    return firstValueFrom(\n      this.httpClient.get<ApiResponse>('http://localhost:3000/api/gfnc')\n    )\n\n  }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAoB,eAAe;AAClD,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,cAAc,QAAQ,MAAM;;AAQrC,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAKE,KAAAC,UAAU,GAAGL,MAAM,CAACC,UAAU,CAAC;;EAE/BK,MAAMA,CAAA;IACJ,OAAOJ,cAAc,CACnB,IAAI,CAACG,UAAU,CAACE,GAAG,CAAc,gCAAgC,CAAC,CACnE;EAEH;EAAC,QAAAC,CAAA,G;qBATUL,WAAW;EAAA;EAAA,QAAAM,EAAA,G;WAAXN,WAAW;IAAAO,OAAA,EAAXP,WAAW,CAAAQ,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}